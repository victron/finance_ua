---
- name: check  spiders.service file exists
  stat: path=/etc/systemd/system/{{ service }}.service follow=yes
  register: spiders_config

# ---------- create package localy ----------------
- name: generate wheel
  command: python3 setup.py bdist_wheel
  args:
    chdir: ../{{ src_dir }}
  delegate_to: 127.0.0.1


- block:
  # need for uwsgi https !!!!
  - name: install libssl-dev
    apt:
      name: libssl-dev
      state: present
    register: libssl

  # remove application if installed ----------
  ## stop services
  - block:
    - name: stop spiders.service
      service: name={{ service }}  state=stopped

    - name: remove application from env
      pip: 
        name: "{{ service }}"
        virtualenv: "{{ home_dir }}/{{ venv_dir }}"
        state: absent

    - name: delete previos file package
      file:
        name: "/{{ home_dir }}/{{ app_spiders }}"
        state: absent

    when: spiders_config.stat.exists == True
    
  become: yes


- block:
  - name: copy application package on remote
    copy: 
      src: "../dist/{{ app_spiders }}" 
      dest: "{{ home_dir }}/{{ app_spiders }}"
      owner: "{{ app_user }}"
      group: "{{ app_user }}"

  - block:
    - name: install application (not libssl.changed)
      pip: 
        name: "file://{{ home_dir }}/{{ app_spiders }}"
        virtualenv: "{{ home_dir }}/{{ venv_dir }}"
        virtualenv_command: "python3 -m venv"
        virtualenv_site_packages: yes
      # become_user: "{{ app_user }}"
      when: not libssl.changed
      notify:
        - start {{ service }}

    - name: install application (libssl.changed)
      pip: 
        name: "file://{{ home_dir }}/{{ app_spiders }}"
        virtualenv: "{{ home_dir }}/{{ venv_dir }}"
        virtualenv_command: "python3 -m venv"
        virtualenv_site_packages: yes
        extra_args: "--no-cache-dir"
      when: libssl.changed
      notify:
        - start {{ service }}

    become_user: "{{ app_user }}"

  become: yes


# configure app
- block:
  - name: generate {{ service }} systemd config
    template: src=spiders.service.j2 dest=/etc/systemd/system/{{ service }}.service
    with_items:
      - "{{ required }}"
    when: ansible_service_mgr == "systemd"
    notify:
      - systemd {{ service }} start

  become: yes
  become_method: sudo


