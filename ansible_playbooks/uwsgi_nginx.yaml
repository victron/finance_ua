---
# copy nginx config, statics and starts
- name: copy nginx config
  command: cp {{ venv_dir }}/.curs/nginx.conf /etc/nginx/nginx.conf chdir={{ home_dir }}
  become: yes
  become_method: sudo
- name: make static directory
  command: mkdir -p {{ static_path }}
  become: yes
  become_method: sudo
- name: copy static files
# TODO: replace chdir on var
  shell: cp -R {{ venv_dir }}/lib/python3.5/site-packages/app/static/* {{ static_path }} chdir={{ home_dir }}
  become: yes
  become_method: sudo
- name: make /etc/curs directory
  command: mkdir -p {{ conf_dir }}
  become: yes
  become_method: sudo
#- name: generate curs.conf file
#  shell: echo 'dir="{{ home_dir }}/{{ venv_dir }}"' > {{ conf_dir }}/curs.conf && echo 'user="{{ remote_user }}"' >> {{ conf_dir }}/curs.conf
#  become: yes
#  become_method: sudo
- name: generate curs.conf from template
  template: src=templates/curs.conf.j2 dest={{ conf_dir }}/curs.conf
  become: yes
  become_method: sudo
- name: copy uwsgi (curs) script to init.d
#  file: src={{ home_dir }}/{{ venv_dir }}/bin/curs dest=/etc/init.d/curs state=link
  command: cp {{ home_dir }}/{{ venv_dir }}/bin/curs /etc/init.d/curs
  become: yes
  become_method: sudo
  notify:
    - start uwsgi
    - start nginx
#- name: start nginx
#  service: name=nginx state=restarted
#           enabled=yes
#  become: yes
#  become_method: sudo
#- name: start mongo
#  service: name=mongod state=started
#           enabled=yes
#  become: yes
#  become_method: sudo
#- name: start uwsgi
#  service: name=curs  state=started
#           enabled=yes
#  become: yes
#  become_method: sudo
...