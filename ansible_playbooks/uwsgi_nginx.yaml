---
# copy nginx config, statics and starts
#- name: copy nginx config
#  command: cp {{ venv_dir }}/.curs/nginx.conf /etc/nginx/nginx.conf chdir={{ home_dir }}
#  become: yes
#  become_method: sudo
- name: generate nginx.conf from template
  template: src=templates/nginx.conf.j2 dest=/etc/nginx/nginx.conf

- name: make static directory
  command: mkdir -p {{ static_path }}

- name: create ssl directory in nginx
  command: mkdir -p /etc/nginx/ssl

- name: generating self-signed SSL Certs
  command: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj "/C=UA/ST=Kyivska/L=Kyiv/O=priv/CN={{ ansible_fqdn }}" -keyout {{ ssl_certificate_key }} -out {{ ssl_certificate }}

- name: copy static files
  shell: cp -R {{ home_dir }}/{{ venv_dir }}/lib/python3.5/site-packages/app/static/* {{ static_path }}

- name: make /etc/curs directory
  command: mkdir -p {{ conf_dir }}
#- name: generate curs.conf file
#  shell: echo 'dir="{{ home_dir }}/{{ venv_dir }}"' > {{ conf_dir }}/curs.conf && echo 'user="{{ remote_user }}"' >> {{ conf_dir }}/curs.conf
#  become: yes
#  become_method: sudo
- name: generate curs.conf from template
  template: src=templates/curs.conf.j2 dest={{ conf_dir }}/curs.conf


- name: copy uwsgi (curs) script to init.d
#  file: src={{ home_dir }}/{{ venv_dir }}/bin/curs dest=/etc/init.d/curs state=link
  command: cp {{ home_dir }}/{{ venv_dir }}/bin/curs /etc/init.d/curs
  notify:
    - start uwsgi
    - start nginx
#- name: start nginx
#  service: name=nginx state=restarted
#           enabled=yes
#  become: yes
#  become_method: sudo
#- name: start mongo
#  service: name=mongod state=started
#           enabled=yes
#  become: yes
#  become_method: sudo
#- name: start uwsgi
#  service: name=curs  state=started
#           enabled=yes
#  become: yes
#  become_method: sudo
- name: generate curs_auto  script into init.d
  template: src=templates/init-script.j2 dest=/etc/init.d/curs_auto mode="a+x"
  # in ansible2 vars could be inside tasks
  vars:
    cmd: $dir/bin/curs_auto
    provider: curs_auto
    Required_Start: mongodb $network $syslog
  when: ansible_service_mgr == "upstart"

- name: generate cursauto systemd config
  template: src=templates/systemd.service.j2 dest=/etc/systemd/system/cursauto.service
  when: ansible_service_mgr == "systemd"
...